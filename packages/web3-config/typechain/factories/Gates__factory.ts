/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gates, GatesInterface } from "../Gates";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "Created",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "snapshotId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "SnapshotCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_conditions",
        type: "bytes",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "createSnapShot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "snapshotId",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610b84806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630dd5ee1b1461005c57806326c500071461008c5780636abd81db146100bc578063ba658111146100ec578063e3c39bbf14610108575b600080fd5b610076600480360381019061007191906105cf565b610124565b604051610083919061062a565b60405180910390f35b6100a660048036038101906100a1919061067b565b6101f5565b6040516100b39190610741565b60405180910390f35b6100d660048036038101906100d19190610763565b610295565b6040516100e391906107b2565b60405180910390f35b61010660048036038101906101019190610832565b6102e3565b005b610122600480360381019061011d91906108d5565b61035d565b005b600080600090505b60026000848152602001908152602001600020805490508110156101e9578373ffffffffffffffffffffffffffffffffffffffff1660026000858152602001908152602001600020828154811061018657610185610935565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101d65760019150506101ef565b80806101e190610993565b91505061012c565b50600090505b92915050565b6001602052806000526040600020600091509050805461021490610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610a0a565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b600260205281600052604060002081815481106102b157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8181600160008054815260200190815260200160002091906103069291906103ee565b507f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd66000543360405161033a929190610a4a565b60405180910390a160008081548092919061035490610993565b91905055505050565b60008333604051602001610372929190610adc565b60405160208183030381529060405280519060200120905082826002600084815260200190815260200160002091906103ac929190610474565b507fe95b26e6130d2ac5a0d1860688592ca2a6b4ece3f93867d3c4b70968d2001bc18185336040516103e093929190610b17565b60405180910390a150505050565b8280546103fa90610a0a565b90600052602060002090601f01602090048101928261041c5760008555610463565b82601f1061043557803560ff1916838001178555610463565b82800160010185558215610463579182015b82811115610462578235825591602001919060010190610447565b5b5090506104709190610514565b5090565b828054828255906000526020600020908101928215610503579160200282015b8281111561050257823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610494565b5b5090506105109190610514565b5090565b5b8082111561052d576000816000905550600101610515565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105668261053b565b9050919050565b6105768161055b565b811461058157600080fd5b50565b6000813590506105938161056d565b92915050565b6000819050919050565b6105ac81610599565b81146105b757600080fd5b50565b6000813590506105c9816105a3565b92915050565b600080604083850312156105e6576105e5610531565b5b60006105f485828601610584565b9250506020610605858286016105ba565b9150509250929050565b60008115159050919050565b6106248161060f565b82525050565b600060208201905061063f600083018461061b565b92915050565b6000819050919050565b61065881610645565b811461066357600080fd5b50565b6000813590506106758161064f565b92915050565b60006020828403121561069157610690610531565b5b600061069f84828501610666565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106e25780820151818401526020810190506106c7565b838111156106f1576000848401525b50505050565b6000601f19601f8301169050919050565b6000610713826106a8565b61071d81856106b3565b935061072d8185602086016106c4565b610736816106f7565b840191505092915050565b6000602082019050818103600083015261075b8184610708565b905092915050565b6000806040838503121561077a57610779610531565b5b6000610788858286016105ba565b925050602061079985828601610666565b9150509250929050565b6107ac8161055b565b82525050565b60006020820190506107c760008301846107a3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107f2576107f16107cd565b5b8235905067ffffffffffffffff81111561080f5761080e6107d2565b5b60208301915083600182028301111561082b5761082a6107d7565b5b9250929050565b6000806020838503121561084957610848610531565b5b600083013567ffffffffffffffff81111561086757610866610536565b5b610873858286016107dc565b92509250509250929050565b60008083601f840112610895576108946107cd565b5b8235905067ffffffffffffffff8111156108b2576108b16107d2565b5b6020830191508360208202830111156108ce576108cd6107d7565b5b9250929050565b6000806000604084860312156108ee576108ed610531565b5b60006108fc86828701610666565b935050602084013567ffffffffffffffff81111561091d5761091c610536565b5b6109298682870161087f565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099e82610645565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109d0576109cf610964565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a2257607f821691505b602082108103610a3557610a346109db565b5b50919050565b610a4481610645565b82525050565b6000604082019050610a5f6000830185610a3b565b610a6c60208301846107a3565b9392505050565b6000819050919050565b610a8e610a8982610645565b610a73565b82525050565b60008160601b9050919050565b6000610aac82610a94565b9050919050565b6000610abe82610aa1565b9050919050565b610ad6610ad18261055b565b610ab3565b82525050565b6000610ae88285610a7d565b602082019150610af88284610ac5565b6014820191508190509392505050565b610b1181610599565b82525050565b6000606082019050610b2c6000830186610b08565b610b396020830185610a3b565b610b4660408301846107a3565b94935050505056fea2646970667358221220f4943c55fa7bddecb6f0e417b5df4517192ab008e2f825cb9a57beedd6877d9c64736f6c634300080e0033";

type GatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gates__factory extends ContractFactory {
  constructor(...args: GatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gates";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gates> {
    return super.deploy(overrides || {}) as Promise<Gates>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gates {
    return super.attach(address) as Gates;
  }
  connect(signer: Signer): Gates__factory {
    return super.connect(signer) as Gates__factory;
  }
  static readonly contractName: "Gates";
  public readonly contractName: "Gates";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatesInterface {
    return new utils.Interface(_abi) as GatesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gates {
    return new Contract(address, _abi, signerOrProvider) as Gates;
  }
}
